const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');

const token = '6177617837:AAGhopUKlswVTmExfvjv0rSA_mSo7lxyUUs';
const apikey = '264f562674f64130b2f102048230407'; 

const bot = new TelegramBot(token, { polling: true });


bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ');
});


bot.onText(/(.+)/, async (msg, match) => {
  const chatId = msg.chat.id;
  const city = match[1];

  try {
    const response = await axios.get(`https://api.weatherapi.com/v1/current.json?key=${apikey}&q=${city}`);
    const data = response.data;

    const weatherCondition = data.current.condition.text;
    const temperature = data.current.temp_c;
    const feelsLike = data.current.feelslike_c;
    const humidity = data.current.humidity;
    const windSpeed = data.current.wind_kph;
    const windDirection = data.current.wind_dir;

    const weatherEmoji = getWeatherEmoji(weatherCondition);
    const weatherMessage = `–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ ${city}:\n\n${weatherEmoji} ${weatherCondition}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${temperature}¬∞C\n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: ${feelsLike}¬∞C\n–í–ª–∞–∂–Ω–æ—Å—Ç—å: ${humidity}%\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: ${windSpeed} –∫–º/—á\n–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞: ${windDirection}`;

    bot.sendMessage(chatId, weatherMessage, {
      reply_markup: {
        inline_keyboard: [
          [
            {
              text: '–ü–æ–¥—Ä–æ–±–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 3 –¥–Ω—è',
              callback_data: 'forecast_3days',
            },
            {
              text: '–ö—Ä–∞—Ç–∫–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 10 –¥–Ω–µ–π',
              callback_data: 'forecast_10days',
            },
          ],
        ],
      },
    });
  } catch (error) {
    bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
  }
});

bot.on('callback_query', (query) => {
  const chatId = query.message.chat.id;
  const messageId = query.message.message_id;
  const action = query.data;

  if (action === 'forecast_3days') {
    bot.deleteMessage(chatId, messageId);
    bot.sendMessage(chatId, '–ü–æ–¥—Ä–æ–±–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 3 –¥–Ω—è');
  } else if (action === 'forecast_10days') {
    bot.deleteMessage(chatId, messageId);
    bot.sendMessage(chatId, '–ö—Ä–∞—Ç–∫–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 10 –¥–Ω–µ–π');
  }
});


function getWeatherEmoji(condition) {
  switch (condition) {
    case 'Clear':
      return '‚òÄÔ∏è';
    case 'Cloudy':
      return '‚òÅÔ∏è';
    case 'Rain':
      return 'üåßÔ∏è';
    case 'Snow':
      return '‚ùÑÔ∏è';
    default:
      return '';
  }
}
